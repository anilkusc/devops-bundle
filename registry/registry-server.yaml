kind: Service
apiVersion: v1
metadata:
  name: registry
  labels:
    app: registry
spec:
  type: NodePort
  ports:
  - port: 80
    name: web
  - port: 5000
    name: ssh
  selector:
    app: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  labels:
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: registry
        env:
        - name: TZ
          value: "Europe/Istanbul"
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH # buradaki şifre arayüzde de geçerli.
          value: "/var/lib/registry/registry.password" # htpasswd -Bc registry.password testuser komutu ile oluşturulan şifreyi auth olarak alır.
        volumeMounts:
        - name: data
          mountPath: /var/lib/registry
      - name: ui
        image: joxit/docker-registry-ui:static
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: web
        env:
        - name: REGISTRY_URL
          value: "http://registry.default.svc.cluster.local:5000"
        - name: DELETE_IMAGES
          value: "true"
        - name: REGISTRY_TITLE
          value: "Registry"
      volumes:
      - name: data
        hostPath:
          path: /volumes/registry/
#TODO:Add authentication to ui
#TODO:garbage collector cron : registry garbage-collect /etc/docker/registry/config.yml
